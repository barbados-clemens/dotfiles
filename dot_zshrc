# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export HOMEBREW_NO_AUTO_UPDATE=true
export PNPM_HOME="/Users/caleb/Library/pnpm"
export PATH="$HOME/bin:/usr/local/bin:/opt/homebrew/bin:/opt/homebrew/sbin:$HOME/.jetbrains:$HOME/.cargo/bin:$HOME/.local/bin/:$HOME/.deno/bin:$PNPM_HOME:/opt/homebrew/opt/openjdk/bin:$PATH"
export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
# lazygit config goes in here
export XDG_CONFIG_HOME="$HOME/.config"
export COREPACK_ENABLE_AUTO_PIN=0

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"


ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  git
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh
export EDITOR="nvim"

alias vim="$EDITOR"
alias rzsh="source ~/.zshrc && confetti"
alias lg="lazygit"
alias work="cd ~/Work/nrwl/"
alias ls="eza -x1h -F=always --group-directories-first --icons"
alias ll="eza -lhl -F=always --group-directories-first --icons"
alias tree="ls -T"
alias zshconfig="$EDITOR ~/.zshrc"
alias editconfig="$EDITOR ~/.config/"
alias c="clear"
alias nxr="pnpm run nx-release && confetti"
alias ylrG="pnpm run local-registry"
alias h="cd ~"
alias w="cd ~/Code"
alias sb="cd ~/Code/sandbox"
alias gwa="git worktree add"
alias rm-nm="rm -rf node_modules && confetti"
alias peek="bat --theme=zenburn"
alias p="peek"
alias bathelp="bat -p --language=help"
alias confetti="open raycast://confetti"
alias ip="ipconfig getifaddr en0 && curl ifconfig.me ; echo"
# alias pnx="pnpm nx"
alias v="$EDITOR ."
alias gan="git commit --amend --no-verify --no-edit -v"
alias ncu="npx npm-check-updates -i"
alias toot="toot tui"
alias "cm"="chezmoi"
alias nx-check="nx format && nx affected --targets=lint,test,testjs,build,typecheck --parallel=10"
alias repo="view_repo"
alias $=" "
alias copilot="github-copilot-cli"
alias 1p="op"
alias rename_pics="exiftool -r '-FileName<DateTimeOriginal' -d '%Y-%m-%d_%H-%M-%S%%-c.%%e'"
alias gpoint="git cherry main -v | head -n 1"

nx() {
  nx_json="nx.json"
  current_dir="$PWD"

  while [ true ]; do
    if [ -e "$current_dir/$nx_json" ]; then

      echo -e "\e[97;44mRunning Nx in $current_dir\e[0m"

      if [ -f "$current_dir/node_modules/.bin/nx" ]; then
        "$current_dir/node_modules/.bin/nx" "$@"
      elif [ -f "$current_dir/pnpm-lock.yaml" ]; then
        pnpm nx "$@"
      elif [ -f "$current_dir/yarn.lock" ]; then
        yarn nx "$@"
      else
        npx nx "$@"
      fi

      break
    fi

  parent_dir=$(dirname "$current_dir")

  if [ "$parent_dir" = "$current_dir" ]; then
    echo -e "\e[30;41mCould not find nx.json in any parent directory. Are you in a Nx workspace?\e[0m"
    break
  fi

    current_dir="$parent_dir"
  done

}

help() {
  "$@" --help 2>&1 | bathelp
}

view_repo() {
  git_remote="$(git remote -v | grep origin | grep fetch | awk '{print $2}')" 
  url=""

  # if the url starts with https then just replace the .git ending
  if [[ "$git_remote" =~ ^https.* ]]; then
    url=$(sed -e 's/\.git//' <<< $git_remote)
  else
    # other wise we are using ssh and it starts with git@
    url=$(sed -e 's/:/\//' -e 's/^git@/https:\/\//' -e 's/\.git$//' <<< $git_remote)
  fi

  echo "Opening $url..."

  open "$url"
}



# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/caleb/gcloud-sdk/path.zsh.inc' ]; then . '/Users/caleb/gcloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/caleb/gcloud-sdk/completion.zsh.inc' ]; then . '/Users/caleb/gcloud-sdk/completion.zsh.inc'; fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

eval "$(op completion zsh)"; compdef _op op
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

